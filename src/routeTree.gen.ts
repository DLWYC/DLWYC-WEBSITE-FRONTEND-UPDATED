/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserdashboardRouteImport } from './routes/userdashboard'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserdashboardIndexRouteImport } from './routes/userdashboard/index'
import { Route as EventsIndexRouteImport } from './routes/events/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as UserdashboardProfileRouteImport } from './routes/userdashboard/profile'
import { Route as UserdashboardEventhistoryRouteImport } from './routes/userdashboard/eventhistory'
import { Route as EventsIdRouteImport } from './routes/events/$id'
import { Route as AuthUserloginRouteImport } from './routes/auth/userlogin'
import { Route as AboutChaplainsRouteImport } from './routes/about/chaplains'
import { Route as AboutChairmansRouteImport } from './routes/about/chairmans'

const UserdashboardRoute = UserdashboardRouteImport.update({
  id: '/userdashboard',
  path: '/userdashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserdashboardIndexRoute = UserdashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserdashboardRoute,
} as any)
const EventsIndexRoute = EventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserdashboardProfileRoute = UserdashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => UserdashboardRoute,
} as any)
const UserdashboardEventhistoryRoute =
  UserdashboardEventhistoryRouteImport.update({
    id: '/eventhistory',
    path: '/eventhistory',
    getParentRoute: () => UserdashboardRoute,
  } as any)
const EventsIdRoute = EventsIdRouteImport.update({
  id: '/events/$id',
  path: '/events/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUserloginRoute = AuthUserloginRouteImport.update({
  id: '/auth/userlogin',
  path: '/auth/userlogin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutChaplainsRoute = AboutChaplainsRouteImport.update({
  id: '/about/chaplains',
  path: '/about/chaplains',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutChairmansRoute = AboutChairmansRouteImport.update({
  id: '/about/chairmans',
  path: '/about/chairmans',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/userdashboard': typeof UserdashboardRouteWithChildren
  '/about/chairmans': typeof AboutChairmansRoute
  '/about/chaplains': typeof AboutChaplainsRoute
  '/auth/userlogin': typeof AuthUserloginRoute
  '/events/$id': typeof EventsIdRoute
  '/userdashboard/eventhistory': typeof UserdashboardEventhistoryRoute
  '/userdashboard/profile': typeof UserdashboardProfileRoute
  '/about': typeof AboutIndexRoute
  '/events': typeof EventsIndexRoute
  '/userdashboard/': typeof UserdashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/about/chairmans': typeof AboutChairmansRoute
  '/about/chaplains': typeof AboutChaplainsRoute
  '/auth/userlogin': typeof AuthUserloginRoute
  '/events/$id': typeof EventsIdRoute
  '/userdashboard/eventhistory': typeof UserdashboardEventhistoryRoute
  '/userdashboard/profile': typeof UserdashboardProfileRoute
  '/about': typeof AboutIndexRoute
  '/events': typeof EventsIndexRoute
  '/userdashboard': typeof UserdashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/userdashboard': typeof UserdashboardRouteWithChildren
  '/about/chairmans': typeof AboutChairmansRoute
  '/about/chaplains': typeof AboutChaplainsRoute
  '/auth/userlogin': typeof AuthUserloginRoute
  '/events/$id': typeof EventsIdRoute
  '/userdashboard/eventhistory': typeof UserdashboardEventhistoryRoute
  '/userdashboard/profile': typeof UserdashboardProfileRoute
  '/about/': typeof AboutIndexRoute
  '/events/': typeof EventsIndexRoute
  '/userdashboard/': typeof UserdashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/gallery'
    | '/userdashboard'
    | '/about/chairmans'
    | '/about/chaplains'
    | '/auth/userlogin'
    | '/events/$id'
    | '/userdashboard/eventhistory'
    | '/userdashboard/profile'
    | '/about'
    | '/events'
    | '/userdashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/gallery'
    | '/about/chairmans'
    | '/about/chaplains'
    | '/auth/userlogin'
    | '/events/$id'
    | '/userdashboard/eventhistory'
    | '/userdashboard/profile'
    | '/about'
    | '/events'
    | '/userdashboard'
  id:
    | '__root__'
    | '/'
    | '/gallery'
    | '/userdashboard'
    | '/about/chairmans'
    | '/about/chaplains'
    | '/auth/userlogin'
    | '/events/$id'
    | '/userdashboard/eventhistory'
    | '/userdashboard/profile'
    | '/about/'
    | '/events/'
    | '/userdashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GalleryRoute: typeof GalleryRoute
  UserdashboardRoute: typeof UserdashboardRouteWithChildren
  AboutChairmansRoute: typeof AboutChairmansRoute
  AboutChaplainsRoute: typeof AboutChaplainsRoute
  AuthUserloginRoute: typeof AuthUserloginRoute
  EventsIdRoute: typeof EventsIdRoute
  AboutIndexRoute: typeof AboutIndexRoute
  EventsIndexRoute: typeof EventsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/userdashboard': {
      id: '/userdashboard'
      path: '/userdashboard'
      fullPath: '/userdashboard'
      preLoaderRoute: typeof UserdashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/userdashboard/': {
      id: '/userdashboard/'
      path: '/'
      fullPath: '/userdashboard/'
      preLoaderRoute: typeof UserdashboardIndexRouteImport
      parentRoute: typeof UserdashboardRoute
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/userdashboard/profile': {
      id: '/userdashboard/profile'
      path: '/profile'
      fullPath: '/userdashboard/profile'
      preLoaderRoute: typeof UserdashboardProfileRouteImport
      parentRoute: typeof UserdashboardRoute
    }
    '/userdashboard/eventhistory': {
      id: '/userdashboard/eventhistory'
      path: '/eventhistory'
      fullPath: '/userdashboard/eventhistory'
      preLoaderRoute: typeof UserdashboardEventhistoryRouteImport
      parentRoute: typeof UserdashboardRoute
    }
    '/events/$id': {
      id: '/events/$id'
      path: '/events/$id'
      fullPath: '/events/$id'
      preLoaderRoute: typeof EventsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/userlogin': {
      id: '/auth/userlogin'
      path: '/auth/userlogin'
      fullPath: '/auth/userlogin'
      preLoaderRoute: typeof AuthUserloginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/chaplains': {
      id: '/about/chaplains'
      path: '/about/chaplains'
      fullPath: '/about/chaplains'
      preLoaderRoute: typeof AboutChaplainsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/chairmans': {
      id: '/about/chairmans'
      path: '/about/chairmans'
      fullPath: '/about/chairmans'
      preLoaderRoute: typeof AboutChairmansRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface UserdashboardRouteChildren {
  UserdashboardEventhistoryRoute: typeof UserdashboardEventhistoryRoute
  UserdashboardProfileRoute: typeof UserdashboardProfileRoute
  UserdashboardIndexRoute: typeof UserdashboardIndexRoute
}

const UserdashboardRouteChildren: UserdashboardRouteChildren = {
  UserdashboardEventhistoryRoute: UserdashboardEventhistoryRoute,
  UserdashboardProfileRoute: UserdashboardProfileRoute,
  UserdashboardIndexRoute: UserdashboardIndexRoute,
}

const UserdashboardRouteWithChildren = UserdashboardRoute._addFileChildren(
  UserdashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GalleryRoute: GalleryRoute,
  UserdashboardRoute: UserdashboardRouteWithChildren,
  AboutChairmansRoute: AboutChairmansRoute,
  AboutChaplainsRoute: AboutChaplainsRoute,
  AuthUserloginRoute: AuthUserloginRoute,
  EventsIdRoute: EventsIdRoute,
  AboutIndexRoute: AboutIndexRoute,
  EventsIndexRoute: EventsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
